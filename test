Ik begin dus met een korte introductie, en begin meteen kort over distributed systems.
Een beetje uitleg over CAP theorem + uitleg van available-partition tolerant.

Uitleg CRDT, SEC
OR-set toelichten en vermelden dat dit in een demo zal gebruikt worden

Problem statement; early dev, hard -> sec, types, waarom kan je andere tools niet gebruiken

-> Demo van 1:12 min
- Network creation
- Terminal interaction
- Disconnect node from network

Architetural overview (ook geupdatet zodat het overeenkomt met hetgeen dat werd getoond in de demo)

Features: benadrukken dat je behaviour van crdts monitort

Application interaction -> uitleg waarom terminal + hoe ziet applicatie definitie eruit voor de tools

node & network config (ook verwijzen naar demo)

Future additions; applications buiten luat, UI voor verschillde types CRDT, meerdere apps, hardware info


Intro
=======
Our lives are continuously more impacted by the interconnection of electronic devices. 
Smartphones, smartwatches and other electronic gadgets make up the internet of things and is expanding every day
Therefore there will always be a need for efficient and correct data handling in these systems

These systems are small distributed systems, which are a collection of independted sytems that act as one coherent system.

DS have several properties that devs need to take into account when desiging an app. 
distributed ssystems that store data have three particular properties that are in a relation with each other
C A P. They make up the CAP theorem
It states that it is impossible to achieve all three properties in a single distributed system

You choose two properties at the cost of the third
why relevant -> AP 

CDRT
======


OR SET
=======

Has two ops: add and remove 
add -> key value pair of unique id with item 
remove -> search for the item and keep track of the ids. -> Remove all the items with the observed ids


Problem 
=======

Early dev -> no standard libraries for development -> hard to program 
-> Sec hard to achieve => needs thouroughly testing

Diff types => generic interface 

Why not other tools
=> Ganglia? 
=> CRDTs have specific properties, 


Demo
====
Explain: diagram, nodes and network => terminal loading app, using commands, connection 

Overview
=====
NodeJS + express => WEB 
nodejs == rpc ==> luat 

features
=======
behaviour = sec, sets 




















